"0","normalize <- function(x) {"
"0","  return ((x - min(x)) / (max(x) - min(x)))"
"0","}"
"0",""
"0","df_philly_2015_live <- df_philly_2015 %>% filter(!is.na(supermarket_nearby)) %>%"
"0","  filter(!is.na(green_spaces)) %>%"
"0","  filter(!is.na(walkability)) %>%"
"0","  mutate(norm_super = normalize(supermarket_nearby)) %>% "
"0","  mutate(norm_green = normalize(green_spaces)) %>% "
"0","  mutate(norm_walk = normalize(walkability)) %>% "
"0","  group_by(county_code) %>%"
"0","  summarise(norm_super = mean(norm_super), norm_green = mean(norm_green), norm_walk = mean(norm_walk)) %>% "
"0","  mutate(total =norm_super+norm_green+norm_walk)"
"2","`summarise()` ungrouping output (override with `.groups` argument)
"
"0","df_philly_2015_live <- as.data.frame(df_philly_2015_live)"
"0","county_code <- df_philly_2015_live %>% pull(county_code)"
"0","norm_super <- df_philly_2015_live %>% pull(norm_super)"
"0","norm_green <- df_philly_2015_live %>% pull(norm_green)"
"0","norm_walk <- df_philly_2015_live %>% pull(norm_walk)"
"0",""
"0","df2 <- rbind("
"0","        data.frame(county_code, ""count"" = norm_super, ""Factor""=""Near Supermarket""),"
"0","        data.frame(county_code, ""count"" = norm_green, ""Factor""=""Green Space""),"
"0","        data.frame(county_code, ""count"" = norm_walk, ""Factor"" = ""Walkability"")"
"0",")"
"0",""
"0","ggplot(df2, aes(x = df2$county_code, y = df2$count, fill = df2$Factor))+"
"0","  geom_bar(stat=""identity"")+"
"0","  scale_fill_brewer(palette=""Set3"") +"
"0","  theme_bw()+"
"0","  labs(title = ""Philadelphia Index of Residential Environment"", subtitle = ""Livability = Green Space Access + Near Supermarket + Walkability"", y = ""Index of Residential Environment"", x = ""County"", fill = 'Factor')+"
"0","  theme(axis.text.x = element_text(color = text_color)) +"
"0","  scale_y_continuous(limits=c(0,1.5))"
"2","Vectorized input to `element_text()` is not officially supported.
Results may be unexpected or may change in future versions of ggplot2."
